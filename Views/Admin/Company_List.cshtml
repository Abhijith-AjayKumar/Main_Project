@model IEnumerable<Ecommerce.Models.Admin_CompanyDetails>

@{
    ViewData["Title"] = "Company_List";
}

<div class="card">
    <div class="card-header" style="background-color:lightgreen;">
        <h1>Company_List</h1>
        <form asp-action="Company_List" method="get">      @*search*@
            <div class="form-actions no-color">
                <p>
                    Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                </p>
            </div>
        </form>

        <div class="row form-group">
            <div class="offset-9">
                <a class="btn btn-danger" asp-action="Create_Company">Create New</a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-success" style="background-color:white">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Phone_No)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.State)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Pin)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Phone_No)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.City)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.State)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Pin)
                            </td>
                            <td>
                                <a asp-action="Create_Company" asp-route-id="@item.Id" class="btn btn-info">Edit</a> |
                                @* <a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                                <form asp-action="Company_List" asp-controller="Admin" asp-route-id="@item.Id" method="post" style="display:inline;">
                                    <a href="#" onclick="this.closest('form').submit(); return confirm('Are You Sure?');" class="btn btn-danger">Delete</a>
                                </form>
                            </td>
                        </tr>

                    }
                }
                else
                {
                    <tr>
                        <td>No Catogories Exist</td>
                    </tr>
                }
            </tbody>
        </table>
        @*<div class="pagination">
            @if (Model.HasPreviousPage)
            {
    <a asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>}

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
    <a asp-action="Index" asp-route-pageIndex="@i" class="@(i == Model.PageIndex ? "active" : "")">@i</a>}

            @if (Model.HasNextPage)
            {
    <a asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>}
        </div>*@
    </div>
</div>
